{
  "results": {
    "ogx_arcx_easy_sv": {
      "acc,none": 0.6498316498316499,
      "acc_stderr,none": 0.009788295410093155,
      "acc_norm,none": 0.6161616161616161,
      "acc_norm_stderr,none": 0.009979061846649307,
      "alias": "ogx_arcx_easy_sv"
    },
    "ogx_arcx_easy_sl": {
      "acc,none": 0.5854377104377104,
      "acc_stderr,none": 0.01010888921244777,
      "acc_norm,none": 0.5332491582491582,
      "acc_norm_stderr,none": 0.010237073872130749,
      "alias": "ogx_arcx_easy_sl"
    },
    "ogx_arcx_easy_sk": {
      "acc,none": 0.5993265993265994,
      "acc_stderr,none": 0.010055304474255572,
      "acc_norm,none": 0.5547138047138047,
      "acc_norm_stderr,none": 0.01019817113787387,
      "alias": "ogx_arcx_easy_sk"
    },
    "ogx_arcx_easy_ro": {
      "acc,none": 0.6439393939393939,
      "acc_stderr,none": 0.009825454608416303,
      "acc_norm,none": 0.6035353535353535,
      "acc_norm_stderr,none": 0.010037412763064526,
      "alias": "ogx_arcx_easy_ro"
    },
    "ogx_arcx_easy_pt-pt": {
      "acc,none": 0.7445286195286195,
      "acc_stderr,none": 0.008949113551665572,
      "acc_norm,none": 0.6835016835016835,
      "acc_norm_stderr,none": 0.009543851857323891,
      "alias": "ogx_arcx_easy_pt-pt"
    },
    "ogx_arcx_easy_pl": {
      "acc,none": 0.6132154882154882,
      "acc_stderr,none": 0.009993308355370968,
      "acc_norm,none": 0.5681818181818182,
      "acc_norm_stderr,none": 0.010163945352271737,
      "alias": "ogx_arcx_easy_pl"
    },
    "ogx_arcx_easy_nl": {
      "acc,none": 0.6494107744107744,
      "acc_stderr,none": 0.00979100382983156,
      "acc_norm,none": 0.6056397306397306,
      "acc_norm_stderr,none": 0.010028176038392997,
      "alias": "ogx_arcx_easy_nl"
    },
    "ogx_arcx_easy_lv": {
      "acc,none": 0.4877946127946128,
      "acc_stderr,none": 0.010256726235129018,
      "acc_norm,none": 0.4663299663299663,
      "acc_norm_stderr,none": 0.010236494647406476,
      "alias": "ogx_arcx_easy_lv"
    },
    "ogx_arcx_easy_lt": {
      "acc,none": 0.5025252525252525,
      "acc_stderr,none": 0.01025965266878346,
      "acc_norm,none": 0.4831649831649832,
      "acc_norm_stderr,none": 0.010253966261288895,
      "alias": "ogx_arcx_easy_lt"
    },
    "ogx_arcx_easy_it": {
      "acc,none": 0.7344276094276094,
      "acc_stderr,none": 0.009062210626971847,
      "acc_norm,none": 0.6872895622895623,
      "acc_norm_stderr,none": 0.009512819491443737,
      "alias": "ogx_arcx_easy_it"
    },
    "ogx_arcx_easy_hu": {
      "acc,none": 0.571969696969697,
      "acc_stderr,none": 0.010152943316426272,
      "acc_norm,none": 0.49957912457912457,
      "acc_norm_stderr,none": 0.01025977988609442,
      "alias": "ogx_arcx_easy_hu"
    },
    "ogx_arcx_easy_fr": {
      "acc,none": 0.7550505050505051,
      "acc_stderr,none": 0.008824588611219103,
      "acc_norm,none": 0.6881313131313131,
      "acc_norm_stderr,none": 0.009505823345817663,
      "alias": "ogx_arcx_easy_fr"
    },
    "ogx_arcx_easy_fi": {
      "acc,none": 0.5273569023569024,
      "acc_stderr,none": 0.01024441516439052,
      "acc_norm,none": 0.5109427609427609,
      "acc_norm_stderr,none": 0.010257326131172867,
      "alias": "ogx_arcx_easy_fi"
    },
    "ogx_arcx_easy_et": {
      "acc,none": 0.48274410774410775,
      "acc_stderr,none": 0.010253671674754631,
      "acc_norm,none": 0.45454545454545453,
      "acc_norm_stderr,none": 0.01021729976270943,
      "alias": "ogx_arcx_easy_et"
    },
    "ogx_arcx_easy_es": {
      "acc,none": 0.7735690235690236,
      "acc_stderr,none": 0.00858787368679927,
      "acc_norm,none": 0.710016835016835,
      "acc_norm_stderr,none": 0.009310840970769042,
      "alias": "ogx_arcx_easy_es"
    },
    "ogx_arcx_easy_el": {
      "acc,none": 0.5862794612794613,
      "acc_stderr,none": 0.010105878530238135,
      "acc_norm,none": 0.523989898989899,
      "acc_norm_stderr,none": 0.010247967392742684,
      "alias": "ogx_arcx_easy_el"
    },
    "ogx_arcx_easy_de": {
      "acc,none": 0.7255892255892256,
      "acc_stderr,none": 0.009156177122244522,
      "acc_norm,none": 0.664983164983165,
      "acc_norm_stderr,none": 0.00968516076593236,
      "alias": "ogx_arcx_easy_de"
    },
    "ogx_arcx_easy_da": {
      "acc,none": 0.6447811447811448,
      "acc_stderr,none": 0.009820245899287115,
      "acc_norm,none": 0.5921717171717171,
      "acc_norm_stderr,none": 0.01008395024004122,
      "alias": "ogx_arcx_easy_da"
    },
    "ogx_arcx_easy_cs": {
      "acc,none": 0.6372053872053872,
      "acc_stderr,none": 0.009865936757013933,
      "acc_norm,none": 0.5904882154882155,
      "acc_norm_stderr,none": 0.010090368160990062,
      "alias": "ogx_arcx_easy_cs"
    },
    "ogx_arcx_easy_bg": {
      "acc,none": 0.6599326599326599,
      "acc_stderr,none": 0.009720765494805285,
      "acc_norm,none": 0.6161616161616161,
      "acc_norm_stderr,none": 0.009979061846649304,
      "alias": "ogx_arcx_easy_bg"
    }
  },
  "group_subtasks": {
    "ogx_arcx_easy_bg": [],
    "ogx_arcx_easy_cs": [],
    "ogx_arcx_easy_da": [],
    "ogx_arcx_easy_de": [],
    "ogx_arcx_easy_el": [],
    "ogx_arcx_easy_es": [],
    "ogx_arcx_easy_et": [],
    "ogx_arcx_easy_fi": [],
    "ogx_arcx_easy_fr": [],
    "ogx_arcx_easy_hu": [],
    "ogx_arcx_easy_it": [],
    "ogx_arcx_easy_lt": [],
    "ogx_arcx_easy_lv": [],
    "ogx_arcx_easy_nl": [],
    "ogx_arcx_easy_pl": [],
    "ogx_arcx_easy_pt-pt": [],
    "ogx_arcx_easy_ro": [],
    "ogx_arcx_easy_sk": [],
    "ogx_arcx_easy_sl": [],
    "ogx_arcx_easy_sv": []
  },
  "configs": {
    "ogx_arcx_easy_bg": {
      "task": "ogx_arcx_easy_bg",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_BG",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Въпрос: {{question}}\nОтговор:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Въпрос: {{question}}\nОтговор:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_cs": {
      "task": "ogx_arcx_easy_cs",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_CS",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Otázka: {{question}}\nOdpověď:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Otázka: {{question}}\nOdpověď:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_da": {
      "task": "ogx_arcx_easy_da",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_DA",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Spørgsmål: {{question}}\nSvar:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Spørgsmål: {{question}}\nSvar:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_de": {
      "task": "ogx_arcx_easy_de",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_DE",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Frage: {{question}}\nAntwort:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Frage: {{question}}\nAntwort:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_el": {
      "task": "ogx_arcx_easy_el",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_EL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Ερώτηση: {{question}}\nΑπάντηση:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Ερώτηση: {{question}}\nΑπάντηση:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_es": {
      "task": "ogx_arcx_easy_es",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_ES",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Pregunta: {{question}}\nRespuesta:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Pregunta: {{question}}\nRespuesta:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_et": {
      "task": "ogx_arcx_easy_et",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_ET",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Küsimus: {{question}}\nVastus:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Küsimus: {{question}}\nVastus:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_fi": {
      "task": "ogx_arcx_easy_fi",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_FI",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Kysymys: {{question}}\nVastaa:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Kysymys: {{question}}\nVastaa:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_fr": {
      "task": "ogx_arcx_easy_fr",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_FR",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Question: {{question}}\nRéponse:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question: {{question}}\nRéponse:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_hu": {
      "task": "ogx_arcx_easy_hu",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_HU",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Kérdés: {{question}}\nVálasz:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Kérdés: {{question}}\nVálasz:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_it": {
      "task": "ogx_arcx_easy_it",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_IT",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Domanda: {{question}}\nRisposta:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Domanda: {{question}}\nRisposta:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_lt": {
      "task": "ogx_arcx_easy_lt",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_LT",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Klausimas: {{question}}\nAtsakymas:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Klausimas: {{question}}\nAtsakymas:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_lv": {
      "task": "ogx_arcx_easy_lv",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_LV",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Jautājums: {{question}}\nAtbilde:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Jautājums: {{question}}\nAtbilde:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_nl": {
      "task": "ogx_arcx_easy_nl",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_NL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Vraag: {{question}}\nAntwoord:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Vraag: {{question}}\nAntwoord:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_pl": {
      "task": "ogx_arcx_easy_pl",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_PL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Pytanie: {{question}}\nOdpowiedź:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Pytanie: {{question}}\nOdpowiedź:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_pt-pt": {
      "task": "ogx_arcx_easy_pt-pt",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_PT-PT",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Questão: {{question}}\nResposta:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Questão: {{question}}\nResposta:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_ro": {
      "task": "ogx_arcx_easy_ro",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_RO",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Întrebare: {{question}}\nRăspuns:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Întrebare: {{question}}\nRăspuns:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_sk": {
      "task": "ogx_arcx_easy_sk",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_SK",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Otázka: {{question}}\nOdpoveď:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Otázka: {{question}}\nOdpoveď:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_sl": {
      "task": "ogx_arcx_easy_sl",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_SL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Vprašanje: {{question}}\nOdgovor:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Vprašanje: {{question}}\nOdgovor:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_sv": {
      "task": "ogx_arcx_easy_sv",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_SV",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Fråga: {{question}}\nSvar:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Fråga: {{question}}\nSvar:",
      "metadata": {
        "version": 1
      }
    }
  },
  "versions": {
    "ogx_arcx_easy_bg": 1,
    "ogx_arcx_easy_cs": 1,
    "ogx_arcx_easy_da": 1,
    "ogx_arcx_easy_de": 1,
    "ogx_arcx_easy_el": 1,
    "ogx_arcx_easy_es": 1,
    "ogx_arcx_easy_et": 1,
    "ogx_arcx_easy_fi": 1,
    "ogx_arcx_easy_fr": 1,
    "ogx_arcx_easy_hu": 1,
    "ogx_arcx_easy_it": 1,
    "ogx_arcx_easy_lt": 1,
    "ogx_arcx_easy_lv": 1,
    "ogx_arcx_easy_nl": 1,
    "ogx_arcx_easy_pl": 1,
    "ogx_arcx_easy_pt-pt": 1,
    "ogx_arcx_easy_ro": 1,
    "ogx_arcx_easy_sk": 1,
    "ogx_arcx_easy_sl": 1,
    "ogx_arcx_easy_sv": 1
  },
  "n-shot": {
    "ogx_arcx_easy_bg": 25,
    "ogx_arcx_easy_cs": 25,
    "ogx_arcx_easy_da": 25,
    "ogx_arcx_easy_de": 25,
    "ogx_arcx_easy_el": 25,
    "ogx_arcx_easy_es": 25,
    "ogx_arcx_easy_et": 25,
    "ogx_arcx_easy_fi": 25,
    "ogx_arcx_easy_fr": 25,
    "ogx_arcx_easy_hu": 25,
    "ogx_arcx_easy_it": 25,
    "ogx_arcx_easy_lt": 25,
    "ogx_arcx_easy_lv": 25,
    "ogx_arcx_easy_nl": 25,
    "ogx_arcx_easy_pl": 25,
    "ogx_arcx_easy_pt-pt": 25,
    "ogx_arcx_easy_ro": 25,
    "ogx_arcx_easy_sk": 25,
    "ogx_arcx_easy_sl": 25,
    "ogx_arcx_easy_sv": 25
  },
  "higher_is_better": {
    "ogx_arcx_easy_bg": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_cs": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_da": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_de": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_el": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_es": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_et": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_fi": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_fr": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_hu": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_it": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_lt": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_lv": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_nl": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_pl": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_pt-pt": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_ro": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_sk": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_sl": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_sv": {
      "acc": true,
      "acc_norm": true
    }
  },
  "n-samples": {
    "ogx_arcx_easy_sv": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_sl": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_sk": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_ro": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_pt-pt": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_pl": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_nl": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_lv": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_lt": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_it": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_hu": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_fr": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_fi": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_et": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_es": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_el": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_de": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_da": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_cs": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_bg": {
      "original": 2376,
      "effective": 2376
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=mistralai/Ministral-8B-Instruct-2410,dtype=bfloat16,trust_remote_code=True,nccl_timeout=3600,trust_remote_code=True",
    "model_num_parameters": 8019808256,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "4847e87e5975a573a2a190399ca62cd266c899ad",
    "batch_size": "auto",
    "batch_sizes": [
      16
    ],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "43468b99",
  "date": 1740645090.2546647,
  "pretty_env_info": "PyTorch version: 2.5.1+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 22.04.3 LTS (x86_64)\nGCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nClang version: Could not collect\nCMake version: Could not collect\nLibc version: glibc-2.35\n\nPython version: 3.10.12 (main, Jan 17 2025, 14:35:34) [GCC 11.4.0] (64-bit runtime)\nPython platform: Linux-6.8.0-40-generic-x86_64-with-glibc2.35\nIs CUDA available: True\nCUDA runtime version: 12.1.105\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA A100-SXM4-80GB\nGPU 1: NVIDIA A100-SXM4-80GB\nGPU 2: NVIDIA A100-SXM4-80GB\nGPU 3: NVIDIA A100-SXM4-80GB\n\nNvidia driver version: 560.28.03\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.9.0\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                         x86_64\nCPU op-mode(s):                       32-bit, 64-bit\nAddress sizes:                        48 bits physical, 48 bits virtual\nByte Order:                           Little Endian\nCPU(s):                               192\nOn-line CPU(s) list:                  0-191\nVendor ID:                            AuthenticAMD\nModel name:                           AMD EPYC 7713 64-Core Processor\nCPU family:                           25\nModel:                                1\nThread(s) per core:                   1\nCore(s) per socket:                   1\nSocket(s):                            192\nStepping:                             1\nBogoMIPS:                             3992.49\nFlags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm rep_good nopl cpuid extd_apicid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm cmp_legacy svm cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw perfctr_core ssbd ibrs ibpb stibp vmmcall fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves clzero xsaveerptr wbnoinvd arat npt lbrv nrip_save tsc_scale vmcb_clean pausefilter pfthreshold v_vmsave_vmload vgif umip pku ospke vaes vpclmulqdq rdpid fsrm arch_capabilities\nVirtualization:                       AMD-V\nHypervisor vendor:                    KVM\nVirtualization type:                  full\nL1d cache:                            12 MiB (192 instances)\nL1i cache:                            12 MiB (192 instances)\nL2 cache:                             96 MiB (192 instances)\nL3 cache:                             3 GiB (192 instances)\nNUMA node(s):                         1\nNUMA node0 CPU(s):                    0-191\nVulnerability Gather data sampling:   Not affected\nVulnerability Itlb multihit:          Not affected\nVulnerability L1tf:                   Not affected\nVulnerability Mds:                    Not affected\nVulnerability Meltdown:               Not affected\nVulnerability Mmio stale data:        Not affected\nVulnerability Reg file data sampling: Not affected\nVulnerability Retbleed:               Not affected\nVulnerability Spec rstack overflow:   Vulnerable: Safe RET, no microcode\nVulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl\nVulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:             Mitigation; Retpolines; IBPB conditional; IBRS_FW; STIBP disabled; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected\nVulnerability Srbds:                  Not affected\nVulnerability Tsx async abort:        Not affected\n\nVersions of relevant libraries:\n[pip3] mypy-extensions==1.0.0\n[pip3] numpy==1.26.4\n[pip3] onnx==1.17.0\n[pip3] onnxruntime==1.20.1\n[pip3] onnxruntime-tools==1.7.0\n[pip3] torch==2.5.1+cu121\n[pip3] torchaudio==2.5.1+cu121\n[pip3] torchvision==0.20.1+cu121\n[pip3] triton==3.1.0\n[conda] Could not collect",
  "transformers_version": "4.49.0.dev0",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<unk>",
    0
  ],
  "tokenizer_eos_token": [
    "</s>",
    2
  ],
  "tokenizer_bos_token": [
    "<s>",
    1
  ],
  "eot_token_id": 2,
  "max_length": 32768,
  "task_hashes": {},
  "model_source": "hf",
  "model_name": "mistralai/Ministral-8B-Instruct-2410",
  "model_name_sanitized": "mistralai__Ministral-8B-Instruct-2410",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": true,
  "chat_template": "{%- if messages[0][\"role\"] == \"system\" %}\n    {%- set system_message = messages[0][\"content\"] %}\n    {%- set loop_messages = messages[1:] %}\n{%- else %}\n    {%- set loop_messages = messages %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n{%- set user_messages = loop_messages | selectattr(\"role\", \"equalto\", \"user\") | list %}\n\n{#- This block checks for alternating user/assistant messages, skipping tool calling messages #}\n{%- set ns = namespace() %}\n{%- set ns.index = 0 %}\n{%- for message in loop_messages %}\n    {%- if not (message.role == \"tool\" or message.role == \"tool_results\" or (message.tool_calls is defined and message.tool_calls is not none)) %}\n        {%- if (message[\"role\"] == \"user\") != (ns.index % 2 == 0) %}\n            {{- raise_exception(\"After the optional system message, conversation roles must alternate user/assistant/user/assistant/...\") }}\n        {%- endif %}\n        {%- set ns.index = ns.index + 1 %}\n    {%- endif %}\n{%- endfor %}\n\n{{- bos_token }}\n{%- for message in loop_messages %}\n    {%- if message[\"role\"] == \"user\" %}\n        {%- if tools is not none and (message == user_messages[-1]) %}\n            {{- \"[AVAILABLE_TOOLS][\" }}\n            {%- for tool in tools %}\n                {%- set tool = tool.function %}\n                {{- '{\"type\": \"function\", \"function\": {' }}\n                {%- for key, val in tool.items() if key != \"return\" %}\n                    {%- if val is string %}\n                        {{- '\"' + key + '\": \"' + val + '\"' }}\n                    {%- else %}\n                        {{- '\"' + key + '\": ' + val|tojson }}\n                    {%- endif %}\n                    {%- if not loop.last %}\n                        {{- \", \" }}\n                    {%- endif %}\n                {%- endfor %}\n                {{- \"}}\" }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- else %}\n                    {{- \"]\" }}\n                {%- endif %}\n            {%- endfor %}\n            {{- \"[/AVAILABLE_TOOLS]\" }}\n            {%- endif %}\n        {%- if loop.last and system_message is defined %}\n            {{- \"[INST]\" + system_message + \"\\n\\n\" + message[\"content\"] + \"[/INST]\" }}\n        {%- else %}\n            {{- \"[INST]\" + message[\"content\"] + \"[/INST]\" }}\n        {%- endif %}\n    {%- elif (message.tool_calls is defined and message.tool_calls is not none) %}\n        {{- \"[TOOL_CALLS][\" }}\n        {%- for tool_call in message.tool_calls %}\n            {%- set out = tool_call.function|tojson %}\n            {{- out[:-1] }}\n            {%- if not tool_call.id is defined or tool_call.id|length != 9 %}\n                {{- raise_exception(\"Tool call IDs should be alphanumeric strings with length 9!\") }}\n            {%- endif %}\n            {{- ', \"id\": \"' + tool_call.id + '\"}' }}\n            {%- if not loop.last %}\n                {{- \", \" }}\n            {%- else %}\n                {{- \"]\" + eos_token }}\n            {%- endif %}\n        {%- endfor %}\n    {%- elif message[\"role\"] == \"assistant\" %}\n        {{- message[\"content\"] + eos_token}}\n    {%- elif message[\"role\"] == \"tool_results\" or message[\"role\"] == \"tool\" %}\n        {%- if message.content is defined and message.content.content is defined %}\n            {%- set content = message.content.content %}\n        {%- else %}\n            {%- set content = message.content %}\n        {%- endif %}\n        {{- '[TOOL_RESULTS]{\"content\": ' + content|string + \", \" }}\n        {%- if not message.tool_call_id is defined or message.tool_call_id|length != 9 %}\n            {{- raise_exception(\"Tool call IDs should be alphanumeric strings with length 9!\") }}\n        {%- endif %}\n        {{- '\"call_id\": \"' + message.tool_call_id + '\"}[/TOOL_RESULTS]' }}\n    {%- else %}\n        {{- raise_exception(\"Only user and assistant roles are supported, with the exception of an initial optional system message!\") }}\n    {%- endif %}\n{%- endfor %}\n",
  "chat_template_sha": "e4676cb56dffea7782fd3e2b577cfaf1e123537e6ef49b3ec7caa6c095c62272",
  "start_time": 583544.552578011,
  "end_time": 590365.269652776,
  "total_evaluation_time_seconds": "6820.717074765009"
}