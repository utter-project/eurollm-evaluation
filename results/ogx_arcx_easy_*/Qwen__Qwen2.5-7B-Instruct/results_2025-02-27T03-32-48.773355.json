{
  "results": {
    "ogx_arcx_easy_sv": {
      "acc,none": 0.5946969696969697,
      "acc_stderr,none": 0.0100740935897392,
      "acc_norm,none": 0.5614478114478114,
      "acc_norm_stderr,none": 0.010182010275471116,
      "alias": "ogx_arcx_easy_sv"
    },
    "ogx_arcx_easy_sl": {
      "acc,none": 0.46254208754208753,
      "acc_stderr,none": 0.010230952104570798,
      "acc_norm,none": 0.4591750841750842,
      "acc_norm_stderr,none": 0.010225526906982611,
      "alias": "ogx_arcx_easy_sl"
    },
    "ogx_arcx_easy_sk": {
      "acc,none": 0.5307239057239057,
      "acc_stderr,none": 0.010240395584815236,
      "acc_norm,none": 0.5092592592592593,
      "acc_norm_stderr,none": 0.010258024147860666,
      "alias": "ogx_arcx_easy_sk"
    },
    "ogx_arcx_easy_ro": {
      "acc,none": 0.5963804713804713,
      "acc_stderr,none": 0.010067368960348225,
      "acc_norm,none": 0.5606060606060606,
      "acc_norm_stderr,none": 0.010184134315437663,
      "alias": "ogx_arcx_easy_ro"
    },
    "ogx_arcx_easy_pt-pt": {
      "acc,none": 0.7188552188552189,
      "acc_stderr,none": 0.009224735470287,
      "acc_norm,none": 0.6712962962962963,
      "acc_norm_stderr,none": 0.009638903167022168,
      "alias": "ogx_arcx_easy_pt-pt"
    },
    "ogx_arcx_easy_pl": {
      "acc,none": 0.5736531986531986,
      "acc_stderr,none": 0.010147858603835132,
      "acc_norm,none": 0.5307239057239057,
      "acc_norm_stderr,none": 0.010240395584815232,
      "alias": "ogx_arcx_easy_pl"
    },
    "ogx_arcx_easy_nl": {
      "acc,none": 0.6430976430976431,
      "acc_stderr,none": 0.00983063021034702,
      "acc_norm,none": 0.585016835016835,
      "acc_norm_stderr,none": 0.010110383151961137,
      "alias": "ogx_arcx_easy_nl"
    },
    "ogx_arcx_easy_lv": {
      "acc,none": 0.39351851851851855,
      "acc_stderr,none": 0.010024426884292552,
      "acc_norm,none": 0.3926767676767677,
      "acc_norm_stderr,none": 0.010020646555538689,
      "alias": "ogx_arcx_easy_lv"
    },
    "ogx_arcx_easy_lt": {
      "acc,none": 0.40824915824915825,
      "acc_stderr,none": 0.010085566195791254,
      "acc_norm,none": 0.3947811447811448,
      "acc_norm_stderr,none": 0.010030038935883561,
      "alias": "ogx_arcx_easy_lt"
    },
    "ogx_arcx_easy_it": {
      "acc,none": 0.686026936026936,
      "acc_stderr,none": 0.009523245335215513,
      "acc_norm,none": 0.6393097643097643,
      "acc_norm_stderr,none": 0.009853512108416741,
      "alias": "ogx_arcx_easy_it"
    },
    "ogx_arcx_easy_hu": {
      "acc,none": 0.4031986531986532,
      "acc_stderr,none": 0.010065668576794787,
      "acc_norm,none": 0.38804713804713803,
      "acc_norm_stderr,none": 0.009999295905750662,
      "alias": "ogx_arcx_easy_hu"
    },
    "ogx_arcx_easy_fr": {
      "acc,none": 0.7196969696969697,
      "acc_stderr,none": 0.009216306864088027,
      "acc_norm,none": 0.6721380471380471,
      "acc_norm_stderr,none": 0.009632587076170011,
      "alias": "ogx_arcx_easy_fr"
    },
    "ogx_arcx_easy_fi": {
      "acc,none": 0.4036195286195286,
      "acc_stderr,none": 0.0100673689603482,
      "acc_norm,none": 0.4116161616161616,
      "acc_norm_stderr,none": 0.01009821864671491,
      "alias": "ogx_arcx_easy_fi"
    },
    "ogx_arcx_easy_et": {
      "acc,none": 0.3602693602693603,
      "acc_stderr,none": 0.00985100258473238,
      "acc_norm,none": 0.36658249158249157,
      "acc_norm_stderr,none": 0.009887786585323948,
      "alias": "ogx_arcx_easy_et"
    },
    "ogx_arcx_easy_es": {
      "acc,none": 0.7428451178451179,
      "acc_stderr,none": 0.008968394768971993,
      "acc_norm,none": 0.6914983164983165,
      "acc_norm_stderr,none": 0.00947747234297813,
      "alias": "ogx_arcx_easy_es"
    },
    "ogx_arcx_easy_el": {
      "acc,none": 0.4444444444444444,
      "acc_stderr,none": 0.010196254838691675,
      "acc_norm,none": 0.4276094276094276,
      "acc_norm_stderr,none": 0.010151683397430679,
      "alias": "ogx_arcx_easy_el"
    },
    "ogx_arcx_easy_de": {
      "acc,none": 0.6877104377104377,
      "acc_stderr,none": 0.009509325983631453,
      "acc_norm,none": 0.6452020202020202,
      "acc_norm_stderr,none": 0.009817629113069696,
      "alias": "ogx_arcx_easy_de"
    },
    "ogx_arcx_easy_da": {
      "acc,none": 0.5795454545454546,
      "acc_stderr,none": 0.010129114278546526,
      "acc_norm,none": 0.5345117845117845,
      "acc_norm_stderr,none": 0.01023531423896939,
      "alias": "ogx_arcx_easy_da"
    },
    "ogx_arcx_easy_cs": {
      "acc,none": 0.5917508417508418,
      "acc_stderr,none": 0.010085566195791247,
      "acc_norm,none": 0.5618686868686869,
      "acc_norm_stderr,none": 0.010180937100600067,
      "alias": "ogx_arcx_easy_cs"
    },
    "ogx_arcx_easy_bg": {
      "acc,none": 0.577020202020202,
      "acc_stderr,none": 0.010137328382209095,
      "acc_norm,none": 0.5580808080808081,
      "acc_norm_stderr,none": 0.010190328123071772,
      "alias": "ogx_arcx_easy_bg"
    }
  },
  "group_subtasks": {
    "ogx_arcx_easy_bg": [],
    "ogx_arcx_easy_cs": [],
    "ogx_arcx_easy_da": [],
    "ogx_arcx_easy_de": [],
    "ogx_arcx_easy_el": [],
    "ogx_arcx_easy_es": [],
    "ogx_arcx_easy_et": [],
    "ogx_arcx_easy_fi": [],
    "ogx_arcx_easy_fr": [],
    "ogx_arcx_easy_hu": [],
    "ogx_arcx_easy_it": [],
    "ogx_arcx_easy_lt": [],
    "ogx_arcx_easy_lv": [],
    "ogx_arcx_easy_nl": [],
    "ogx_arcx_easy_pl": [],
    "ogx_arcx_easy_pt-pt": [],
    "ogx_arcx_easy_ro": [],
    "ogx_arcx_easy_sk": [],
    "ogx_arcx_easy_sl": [],
    "ogx_arcx_easy_sv": []
  },
  "configs": {
    "ogx_arcx_easy_bg": {
      "task": "ogx_arcx_easy_bg",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_BG",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Въпрос: {{question}}\nОтговор:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Въпрос: {{question}}\nОтговор:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_cs": {
      "task": "ogx_arcx_easy_cs",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_CS",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Otázka: {{question}}\nOdpověď:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Otázka: {{question}}\nOdpověď:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_da": {
      "task": "ogx_arcx_easy_da",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_DA",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Spørgsmål: {{question}}\nSvar:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Spørgsmål: {{question}}\nSvar:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_de": {
      "task": "ogx_arcx_easy_de",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_DE",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Frage: {{question}}\nAntwort:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Frage: {{question}}\nAntwort:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_el": {
      "task": "ogx_arcx_easy_el",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_EL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Ερώτηση: {{question}}\nΑπάντηση:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Ερώτηση: {{question}}\nΑπάντηση:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_es": {
      "task": "ogx_arcx_easy_es",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_ES",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Pregunta: {{question}}\nRespuesta:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Pregunta: {{question}}\nRespuesta:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_et": {
      "task": "ogx_arcx_easy_et",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_ET",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Küsimus: {{question}}\nVastus:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Küsimus: {{question}}\nVastus:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_fi": {
      "task": "ogx_arcx_easy_fi",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_FI",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Kysymys: {{question}}\nVastaa:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Kysymys: {{question}}\nVastaa:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_fr": {
      "task": "ogx_arcx_easy_fr",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_FR",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Question: {{question}}\nRéponse:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question: {{question}}\nRéponse:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_hu": {
      "task": "ogx_arcx_easy_hu",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_HU",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Kérdés: {{question}}\nVálasz:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Kérdés: {{question}}\nVálasz:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_it": {
      "task": "ogx_arcx_easy_it",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_IT",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Domanda: {{question}}\nRisposta:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Domanda: {{question}}\nRisposta:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_lt": {
      "task": "ogx_arcx_easy_lt",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_LT",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Klausimas: {{question}}\nAtsakymas:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Klausimas: {{question}}\nAtsakymas:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_lv": {
      "task": "ogx_arcx_easy_lv",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_LV",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Jautājums: {{question}}\nAtbilde:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Jautājums: {{question}}\nAtbilde:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_nl": {
      "task": "ogx_arcx_easy_nl",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_NL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Vraag: {{question}}\nAntwoord:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Vraag: {{question}}\nAntwoord:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_pl": {
      "task": "ogx_arcx_easy_pl",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_PL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Pytanie: {{question}}\nOdpowiedź:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Pytanie: {{question}}\nOdpowiedź:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_pt-pt": {
      "task": "ogx_arcx_easy_pt-pt",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_PT-PT",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Questão: {{question}}\nResposta:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Questão: {{question}}\nResposta:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_ro": {
      "task": "ogx_arcx_easy_ro",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_RO",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Întrebare: {{question}}\nRăspuns:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Întrebare: {{question}}\nRăspuns:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_sk": {
      "task": "ogx_arcx_easy_sk",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_SK",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Otázka: {{question}}\nOdpoveď:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Otázka: {{question}}\nOdpoveď:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_sl": {
      "task": "ogx_arcx_easy_sl",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_SL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Vprašanje: {{question}}\nOdgovor:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Vprašanje: {{question}}\nOdgovor:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_easy_sv": {
      "task": "ogx_arcx_easy_sv",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "easy_SV",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Fråga: {{question}}\nSvar:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Fråga: {{question}}\nSvar:",
      "metadata": {
        "version": 1
      }
    }
  },
  "versions": {
    "ogx_arcx_easy_bg": 1,
    "ogx_arcx_easy_cs": 1,
    "ogx_arcx_easy_da": 1,
    "ogx_arcx_easy_de": 1,
    "ogx_arcx_easy_el": 1,
    "ogx_arcx_easy_es": 1,
    "ogx_arcx_easy_et": 1,
    "ogx_arcx_easy_fi": 1,
    "ogx_arcx_easy_fr": 1,
    "ogx_arcx_easy_hu": 1,
    "ogx_arcx_easy_it": 1,
    "ogx_arcx_easy_lt": 1,
    "ogx_arcx_easy_lv": 1,
    "ogx_arcx_easy_nl": 1,
    "ogx_arcx_easy_pl": 1,
    "ogx_arcx_easy_pt-pt": 1,
    "ogx_arcx_easy_ro": 1,
    "ogx_arcx_easy_sk": 1,
    "ogx_arcx_easy_sl": 1,
    "ogx_arcx_easy_sv": 1
  },
  "n-shot": {
    "ogx_arcx_easy_bg": 25,
    "ogx_arcx_easy_cs": 25,
    "ogx_arcx_easy_da": 25,
    "ogx_arcx_easy_de": 25,
    "ogx_arcx_easy_el": 25,
    "ogx_arcx_easy_es": 25,
    "ogx_arcx_easy_et": 25,
    "ogx_arcx_easy_fi": 25,
    "ogx_arcx_easy_fr": 25,
    "ogx_arcx_easy_hu": 25,
    "ogx_arcx_easy_it": 25,
    "ogx_arcx_easy_lt": 25,
    "ogx_arcx_easy_lv": 25,
    "ogx_arcx_easy_nl": 25,
    "ogx_arcx_easy_pl": 25,
    "ogx_arcx_easy_pt-pt": 25,
    "ogx_arcx_easy_ro": 25,
    "ogx_arcx_easy_sk": 25,
    "ogx_arcx_easy_sl": 25,
    "ogx_arcx_easy_sv": 25
  },
  "higher_is_better": {
    "ogx_arcx_easy_bg": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_cs": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_da": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_de": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_el": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_es": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_et": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_fi": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_fr": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_hu": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_it": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_lt": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_lv": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_nl": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_pl": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_pt-pt": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_ro": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_sk": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_sl": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_easy_sv": {
      "acc": true,
      "acc_norm": true
    }
  },
  "n-samples": {
    "ogx_arcx_easy_sv": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_sl": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_sk": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_ro": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_pt-pt": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_pl": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_nl": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_lv": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_lt": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_it": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_hu": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_fr": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_fi": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_et": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_es": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_el": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_de": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_da": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_cs": {
      "original": 2376,
      "effective": 2376
    },
    "ogx_arcx_easy_bg": {
      "original": 2376,
      "effective": 2376
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=Qwen/Qwen2.5-7B-Instruct,dtype=bfloat16,trust_remote_code=True,nccl_timeout=3600,trust_remote_code=True",
    "model_num_parameters": 7615616512,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "a09a35458c702b33eeacc393d103063234e8bc28",
    "batch_size": "auto",
    "batch_sizes": [
      8
    ],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "43468b99",
  "date": 1740618975.108097,
  "pretty_env_info": "PyTorch version: 2.5.1+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 22.04.3 LTS (x86_64)\nGCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nClang version: Could not collect\nCMake version: Could not collect\nLibc version: glibc-2.35\n\nPython version: 3.10.12 (main, Jan 17 2025, 14:35:34) [GCC 11.4.0] (64-bit runtime)\nPython platform: Linux-6.8.0-40-generic-x86_64-with-glibc2.35\nIs CUDA available: True\nCUDA runtime version: 12.1.105\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA A100-SXM4-80GB\nGPU 1: NVIDIA A100-SXM4-80GB\nGPU 2: NVIDIA A100-SXM4-80GB\nGPU 3: NVIDIA A100-SXM4-80GB\n\nNvidia driver version: 560.28.03\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.9.0\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.9.0\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                         x86_64\nCPU op-mode(s):                       32-bit, 64-bit\nAddress sizes:                        48 bits physical, 48 bits virtual\nByte Order:                           Little Endian\nCPU(s):                               192\nOn-line CPU(s) list:                  0-191\nVendor ID:                            AuthenticAMD\nModel name:                           AMD EPYC 7713 64-Core Processor\nCPU family:                           25\nModel:                                1\nThread(s) per core:                   1\nCore(s) per socket:                   1\nSocket(s):                            192\nStepping:                             1\nBogoMIPS:                             3992.49\nFlags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm rep_good nopl cpuid extd_apicid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm cmp_legacy svm cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw perfctr_core ssbd ibrs ibpb stibp vmmcall fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves clzero xsaveerptr wbnoinvd arat npt lbrv nrip_save tsc_scale vmcb_clean pausefilter pfthreshold v_vmsave_vmload vgif umip pku ospke vaes vpclmulqdq rdpid fsrm arch_capabilities\nVirtualization:                       AMD-V\nHypervisor vendor:                    KVM\nVirtualization type:                  full\nL1d cache:                            12 MiB (192 instances)\nL1i cache:                            12 MiB (192 instances)\nL2 cache:                             96 MiB (192 instances)\nL3 cache:                             3 GiB (192 instances)\nNUMA node(s):                         1\nNUMA node0 CPU(s):                    0-191\nVulnerability Gather data sampling:   Not affected\nVulnerability Itlb multihit:          Not affected\nVulnerability L1tf:                   Not affected\nVulnerability Mds:                    Not affected\nVulnerability Meltdown:               Not affected\nVulnerability Mmio stale data:        Not affected\nVulnerability Reg file data sampling: Not affected\nVulnerability Retbleed:               Not affected\nVulnerability Spec rstack overflow:   Vulnerable: Safe RET, no microcode\nVulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl\nVulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:             Mitigation; Retpolines; IBPB conditional; IBRS_FW; STIBP disabled; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected\nVulnerability Srbds:                  Not affected\nVulnerability Tsx async abort:        Not affected\n\nVersions of relevant libraries:\n[pip3] mypy-extensions==1.0.0\n[pip3] numpy==1.26.4\n[pip3] onnx==1.17.0\n[pip3] onnxruntime==1.20.1\n[pip3] onnxruntime-tools==1.7.0\n[pip3] torch==2.5.1+cu121\n[pip3] torchaudio==2.5.1+cu121\n[pip3] torchvision==0.20.1+cu121\n[pip3] triton==3.1.0\n[conda] Could not collect",
  "transformers_version": "4.49.0.dev0",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|endoftext|>",
    151643
  ],
  "tokenizer_eos_token": [
    "<|im_end|>",
    151645
  ],
  "tokenizer_bos_token": [
    null,
    null
  ],
  "eot_token_id": 151645,
  "max_length": 32768,
  "task_hashes": {},
  "model_source": "hf",
  "model_name": "Qwen/Qwen2.5-7B-Instruct",
  "model_name_sanitized": "Qwen__Qwen2.5-7B-Instruct",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": true,
  "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Qwen, created by Alibaba Cloud. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
  "chat_template_sha": "cd8e9439f0570856fd70470bf8889ebd8b5d1107207f67a5efb46e342330527f",
  "start_time": 557429.749460645,
  "end_time": 565633.562347641,
  "total_evaluation_time_seconds": "8203.812886995962"
}