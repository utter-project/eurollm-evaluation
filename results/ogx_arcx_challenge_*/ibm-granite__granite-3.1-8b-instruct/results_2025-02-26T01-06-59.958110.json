{
  "results": {
    "ogx_arcx_challenge_sv": {
      "acc,none": 0.37372013651877134,
      "acc_stderr,none": 0.014137708601759082,
      "acc_norm,none": 0.40784982935153585,
      "acc_norm_stderr,none": 0.014361097288449705,
      "alias": "ogx_arcx_challenge_sv"
    },
    "ogx_arcx_challenge_sl": {
      "acc,none": 0.27559726962457337,
      "acc_stderr,none": 0.01305716965576184,
      "acc_norm,none": 0.33361774744027306,
      "acc_norm_stderr,none": 0.013778687054176536,
      "alias": "ogx_arcx_challenge_sl"
    },
    "ogx_arcx_challenge_sk": {
      "acc,none": 0.35921501706484643,
      "acc_stderr,none": 0.014020224155839154,
      "acc_norm,none": 0.40017064846416384,
      "acc_norm_stderr,none": 0.014317197787809172,
      "alias": "ogx_arcx_challenge_sk"
    },
    "ogx_arcx_challenge_ro": {
      "acc,none": 0.3728668941979522,
      "acc_stderr,none": 0.014131176760131172,
      "acc_norm,none": 0.40017064846416384,
      "acc_norm_stderr,none": 0.01431719778780918,
      "alias": "ogx_arcx_challenge_ro"
    },
    "ogx_arcx_challenge_pt-pt": {
      "acc,none": 0.5409556313993175,
      "acc_stderr,none": 0.01456229107360123,
      "acc_norm,none": 0.5426621160409556,
      "acc_norm_stderr,none": 0.014558106543924072,
      "alias": "ogx_arcx_challenge_pt-pt"
    },
    "ogx_arcx_challenge_pl": {
      "acc,none": 0.3302047781569966,
      "acc_stderr,none": 0.013743085603760427,
      "acc_norm,none": 0.36689419795221845,
      "acc_norm_stderr,none": 0.014084133118104289,
      "alias": "ogx_arcx_challenge_pl"
    },
    "ogx_arcx_challenge_nl": {
      "acc,none": 0.5179180887372014,
      "acc_stderr,none": 0.01460200558549098,
      "acc_norm,none": 0.5119453924914675,
      "acc_norm_stderr,none": 0.014607220340597167,
      "alias": "ogx_arcx_challenge_nl"
    },
    "ogx_arcx_challenge_lv": {
      "acc,none": 0.22866894197952217,
      "acc_stderr,none": 0.012272853582540807,
      "acc_norm,none": 0.26023890784982934,
      "acc_norm_stderr,none": 0.01282193022511256,
      "alias": "ogx_arcx_challenge_lv"
    },
    "ogx_arcx_challenge_lt": {
      "acc,none": 0.21331058020477817,
      "acc_stderr,none": 0.011970971742326334,
      "acc_norm,none": 0.2721843003412969,
      "acc_norm_stderr,none": 0.01300660040642371,
      "alias": "ogx_arcx_challenge_lt"
    },
    "ogx_arcx_challenge_it": {
      "acc,none": 0.5204778156996587,
      "acc_stderr,none": 0.014599131353035014,
      "acc_norm,none": 0.5511945392491467,
      "acc_norm_stderr,none": 0.014534599585097665,
      "alias": "ogx_arcx_challenge_it"
    },
    "ogx_arcx_challenge_hu": {
      "acc,none": 0.21245733788395904,
      "acc_stderr,none": 0.011953482906582946,
      "acc_norm,none": 0.2781569965870307,
      "acc_norm_stderr,none": 0.013094469919538812,
      "alias": "ogx_arcx_challenge_hu"
    },
    "ogx_arcx_challenge_fr": {
      "acc,none": 0.552901023890785,
      "acc_stderr,none": 0.014529380160526842,
      "acc_norm,none": 0.5691126279863481,
      "acc_norm_stderr,none": 0.014471133392642471,
      "alias": "ogx_arcx_challenge_fr"
    },
    "ogx_arcx_challenge_fi": {
      "acc,none": 0.25341296928327645,
      "acc_stderr,none": 0.012710896778378604,
      "acc_norm,none": 0.26109215017064846,
      "acc_norm_stderr,none": 0.01283552390947384,
      "alias": "ogx_arcx_challenge_fi"
    },
    "ogx_arcx_challenge_et": {
      "acc,none": 0.21075085324232082,
      "acc_stderr,none": 0.011918271754852184,
      "acc_norm,none": 0.25597269624573377,
      "acc_norm_stderr,none": 0.012753013241244518,
      "alias": "ogx_arcx_challenge_et"
    },
    "ogx_arcx_challenge_es": {
      "acc,none": 0.5452218430034129,
      "acc_stderr,none": 0.014551507060836355,
      "acc_norm,none": 0.5631399317406144,
      "acc_norm_stderr,none": 0.014494421584256512,
      "alias": "ogx_arcx_challenge_es"
    },
    "ogx_arcx_challenge_el": {
      "acc,none": 0.2687713310580205,
      "acc_stderr,none": 0.012955065963710696,
      "acc_norm,none": 0.30887372013651876,
      "acc_norm_stderr,none": 0.013501770929344003,
      "alias": "ogx_arcx_challenge_el"
    },
    "ogx_arcx_challenge_de": {
      "acc,none": 0.5204778156996587,
      "acc_stderr,none": 0.01459913135303501,
      "acc_norm,none": 0.5366894197952219,
      "acc_norm_stderr,none": 0.014572000527756989,
      "alias": "ogx_arcx_challenge_de"
    },
    "ogx_arcx_challenge_da": {
      "acc,none": 0.36689419795221845,
      "acc_stderr,none": 0.014084133118104296,
      "acc_norm,none": 0.38822525597269625,
      "acc_norm_stderr,none": 0.014241614207414037,
      "alias": "ogx_arcx_challenge_da"
    },
    "ogx_arcx_challenge_cs": {
      "acc,none": 0.45307167235494883,
      "acc_stderr,none": 0.01454689205200563,
      "acc_norm,none": 0.4931740614334471,
      "acc_norm_stderr,none": 0.014610029151379813,
      "alias": "ogx_arcx_challenge_cs"
    },
    "ogx_arcx_challenge_bg": {
      "acc,none": 0.3191126279863481,
      "acc_stderr,none": 0.013621696119173311,
      "acc_norm,none": 0.3575085324232082,
      "acc_norm_stderr,none": 0.014005494275916566,
      "alias": "ogx_arcx_challenge_bg"
    }
  },
  "group_subtasks": {
    "ogx_arcx_challenge_bg": [],
    "ogx_arcx_challenge_cs": [],
    "ogx_arcx_challenge_da": [],
    "ogx_arcx_challenge_de": [],
    "ogx_arcx_challenge_el": [],
    "ogx_arcx_challenge_es": [],
    "ogx_arcx_challenge_et": [],
    "ogx_arcx_challenge_fi": [],
    "ogx_arcx_challenge_fr": [],
    "ogx_arcx_challenge_hu": [],
    "ogx_arcx_challenge_it": [],
    "ogx_arcx_challenge_lt": [],
    "ogx_arcx_challenge_lv": [],
    "ogx_arcx_challenge_nl": [],
    "ogx_arcx_challenge_pl": [],
    "ogx_arcx_challenge_pt-pt": [],
    "ogx_arcx_challenge_ro": [],
    "ogx_arcx_challenge_sk": [],
    "ogx_arcx_challenge_sl": [],
    "ogx_arcx_challenge_sv": []
  },
  "configs": {
    "ogx_arcx_challenge_bg": {
      "task": "ogx_arcx_challenge_bg",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_BG",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Въпрос: {{question}}\nОтговор:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Въпрос: {{question}}\nОтговор:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_cs": {
      "task": "ogx_arcx_challenge_cs",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_CS",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Otázka: {{question}}\nOdpověď:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Otázka: {{question}}\nOdpověď:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_da": {
      "task": "ogx_arcx_challenge_da",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_DA",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Spørgsmål: {{question}}\nSvar:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Spørgsmål: {{question}}\nSvar:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_de": {
      "task": "ogx_arcx_challenge_de",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_DE",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Frage: {{question}}\nAntwort:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Frage: {{question}}\nAntwort:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_el": {
      "task": "ogx_arcx_challenge_el",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_EL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Ερώτηση: {{question}}\nΑπάντηση:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Ερώτηση: {{question}}\nΑπάντηση:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_es": {
      "task": "ogx_arcx_challenge_es",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_ES",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Pregunta: {{question}}\nRespuesta:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Pregunta: {{question}}\nRespuesta:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_et": {
      "task": "ogx_arcx_challenge_et",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_ET",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Küsimus: {{question}}\nVastus:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Küsimus: {{question}}\nVastus:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_fi": {
      "task": "ogx_arcx_challenge_fi",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_FI",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Kysymys: {{question}}\nVastaa:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Kysymys: {{question}}\nVastaa:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_fr": {
      "task": "ogx_arcx_challenge_fr",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_FR",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Question: {{question}}\nRéponse:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question: {{question}}\nRéponse:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_hu": {
      "task": "ogx_arcx_challenge_hu",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_HU",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Kérdés: {{question}}\nVálasz:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Kérdés: {{question}}\nVálasz:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_it": {
      "task": "ogx_arcx_challenge_it",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_IT",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Domanda: {{question}}\nRisposta:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Domanda: {{question}}\nRisposta:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_lt": {
      "task": "ogx_arcx_challenge_lt",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_LT",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Klausimas: {{question}}\nAtsakymas:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Klausimas: {{question}}\nAtsakymas:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_lv": {
      "task": "ogx_arcx_challenge_lv",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_LV",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Jautājums: {{question}}\nAtbilde:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Jautājums: {{question}}\nAtbilde:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_nl": {
      "task": "ogx_arcx_challenge_nl",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_NL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Vraag: {{question}}\nAntwoord:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Vraag: {{question}}\nAntwoord:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_pl": {
      "task": "ogx_arcx_challenge_pl",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_PL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Pytanie: {{question}}\nOdpowiedź:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Pytanie: {{question}}\nOdpowiedź:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_pt-pt": {
      "task": "ogx_arcx_challenge_pt-pt",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_PT-PT",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Questão: {{question}}\nResposta:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Questão: {{question}}\nResposta:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_ro": {
      "task": "ogx_arcx_challenge_ro",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_RO",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Întrebare: {{question}}\nRăspuns:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Întrebare: {{question}}\nRăspuns:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_sk": {
      "task": "ogx_arcx_challenge_sk",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_SK",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Otázka: {{question}}\nOdpoveď:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Otázka: {{question}}\nOdpoveď:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_sl": {
      "task": "ogx_arcx_challenge_sl",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_SL",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Vprašanje: {{question}}\nOdgovor:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Vprašanje: {{question}}\nOdgovor:",
      "metadata": {
        "version": 1
      }
    },
    "ogx_arcx_challenge_sv": {
      "task": "ogx_arcx_challenge_sv",
      "group": [
        "ai2_arc",
        "arcx"
      ],
      "dataset_path": "openGPT-X/arcx",
      "dataset_name": "challenge_SV",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Fråga: {{question}}\nSvar:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 25,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Fråga: {{question}}\nSvar:",
      "metadata": {
        "version": 1
      }
    }
  },
  "versions": {
    "ogx_arcx_challenge_bg": 1,
    "ogx_arcx_challenge_cs": 1,
    "ogx_arcx_challenge_da": 1,
    "ogx_arcx_challenge_de": 1,
    "ogx_arcx_challenge_el": 1,
    "ogx_arcx_challenge_es": 1,
    "ogx_arcx_challenge_et": 1,
    "ogx_arcx_challenge_fi": 1,
    "ogx_arcx_challenge_fr": 1,
    "ogx_arcx_challenge_hu": 1,
    "ogx_arcx_challenge_it": 1,
    "ogx_arcx_challenge_lt": 1,
    "ogx_arcx_challenge_lv": 1,
    "ogx_arcx_challenge_nl": 1,
    "ogx_arcx_challenge_pl": 1,
    "ogx_arcx_challenge_pt-pt": 1,
    "ogx_arcx_challenge_ro": 1,
    "ogx_arcx_challenge_sk": 1,
    "ogx_arcx_challenge_sl": 1,
    "ogx_arcx_challenge_sv": 1
  },
  "n-shot": {
    "ogx_arcx_challenge_bg": 25,
    "ogx_arcx_challenge_cs": 25,
    "ogx_arcx_challenge_da": 25,
    "ogx_arcx_challenge_de": 25,
    "ogx_arcx_challenge_el": 25,
    "ogx_arcx_challenge_es": 25,
    "ogx_arcx_challenge_et": 25,
    "ogx_arcx_challenge_fi": 25,
    "ogx_arcx_challenge_fr": 25,
    "ogx_arcx_challenge_hu": 25,
    "ogx_arcx_challenge_it": 25,
    "ogx_arcx_challenge_lt": 25,
    "ogx_arcx_challenge_lv": 25,
    "ogx_arcx_challenge_nl": 25,
    "ogx_arcx_challenge_pl": 25,
    "ogx_arcx_challenge_pt-pt": 25,
    "ogx_arcx_challenge_ro": 25,
    "ogx_arcx_challenge_sk": 25,
    "ogx_arcx_challenge_sl": 25,
    "ogx_arcx_challenge_sv": 25
  },
  "higher_is_better": {
    "ogx_arcx_challenge_bg": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_cs": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_da": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_de": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_el": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_es": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_et": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_fi": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_fr": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_hu": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_it": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_lt": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_lv": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_nl": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_pl": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_pt-pt": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_ro": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_sk": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_sl": {
      "acc": true,
      "acc_norm": true
    },
    "ogx_arcx_challenge_sv": {
      "acc": true,
      "acc_norm": true
    }
  },
  "n-samples": {
    "ogx_arcx_challenge_sv": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_sl": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_sk": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_ro": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_pt-pt": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_pl": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_nl": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_lv": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_lt": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_it": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_hu": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_fr": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_fi": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_et": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_es": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_el": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_de": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_da": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_cs": {
      "original": 1172,
      "effective": 1172
    },
    "ogx_arcx_challenge_bg": {
      "original": 1172,
      "effective": 1172
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=ibm-granite/granite-3.1-8b-instruct,dtype=bfloat16,trust_remote_code=True,nccl_timeout=3600,trust_remote_code=True",
    "model_num_parameters": 8170848256,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "3f7276d857175e3ee74045d409970bdbf54494a9",
    "batch_size": "auto",
    "batch_sizes": [
      16
    ],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "43468b99",
  "date": 1740528480.747163,
  "pretty_env_info": "PyTorch version: 2.6.0+cu124\nIs debug build: False\nCUDA used to build PyTorch: 12.4\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 22.04.3 LTS (x86_64)\nGCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nClang version: Could not collect\nCMake version: version 3.22.1\nLibc version: glibc-2.35\n\nPython version: 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0] (64-bit runtime)\nPython platform: Linux-5.15.0-131-generic-x86_64-with-glibc2.35\nIs CUDA available: True\nCUDA runtime version: 12.0.140\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA A100-SXM4-80GB\nGPU 1: NVIDIA A100-SXM4-80GB\nGPU 2: NVIDIA A100-SXM4-80GB\nGPU 3: NVIDIA A100-SXM4-80GB\nGPU 4: NVIDIA A100-SXM4-80GB\nGPU 5: NVIDIA A100-SXM4-80GB\nGPU 6: NVIDIA A100-SXM4-80GB\nGPU 7: NVIDIA A100-SXM4-80GB\n\nNvidia driver version: 550.144.03\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.9.7\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                         x86_64\nCPU op-mode(s):                       32-bit, 64-bit\nAddress sizes:                        43 bits physical, 48 bits virtual\nByte Order:                           Little Endian\nCPU(s):                               192\nOn-line CPU(s) list:                  0-191\nVendor ID:                            AuthenticAMD\nModel name:                           AMD EPYC 7643 48-Core Processor\nCPU family:                           25\nModel:                                1\nThread(s) per core:                   2\nCore(s) per socket:                   48\nSocket(s):                            2\nStepping:                             1\nFrequency boost:                      enabled\nCPU max MHz:                          3640.9170\nCPU min MHz:                          1500.0000\nBogoMIPS:                             4591.24\nFlags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 invpcid_single hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 invpcid cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr rdpru wbnoinvd amd_ppin arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold v_vmsave_vmload vgif v_spec_ctrl umip pku ospke vaes vpclmulqdq rdpid overflow_recov succor smca sme sev sev_es\nVirtualization:                       AMD-V\nL1d cache:                            3 MiB (96 instances)\nL1i cache:                            3 MiB (96 instances)\nL2 cache:                             48 MiB (96 instances)\nL3 cache:                             512 MiB (16 instances)\nNUMA node(s):                         8\nNUMA node0 CPU(s):                    0-11,96-107\nNUMA node1 CPU(s):                    12-23,108-119\nNUMA node2 CPU(s):                    24-35,120-131\nNUMA node3 CPU(s):                    36-47,132-143\nNUMA node4 CPU(s):                    48-59,144-155\nNUMA node5 CPU(s):                    60-71,156-167\nNUMA node6 CPU(s):                    72-83,168-179\nNUMA node7 CPU(s):                    84-95,180-191\nVulnerability Gather data sampling:   Not affected\nVulnerability Itlb multihit:          Not affected\nVulnerability L1tf:                   Not affected\nVulnerability Mds:                    Not affected\nVulnerability Meltdown:               Not affected\nVulnerability Mmio stale data:        Not affected\nVulnerability Reg file data sampling: Not affected\nVulnerability Retbleed:               Not affected\nVulnerability Spec rstack overflow:   Mitigation; safe RET\nVulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl and seccomp\nVulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:             Mitigation; Retpolines; IBPB conditional; IBRS_FW; STIBP always-on; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected\nVulnerability Srbds:                  Not affected\nVulnerability Tsx async abort:        Not affected\n\nVersions of relevant libraries:\n[pip3] numpy==2.2.3\n[pip3] nvidia-cublas-cu12==12.4.5.8\n[pip3] nvidia-cuda-cupti-cu12==12.4.127\n[pip3] nvidia-cuda-nvrtc-cu12==12.4.127\n[pip3] nvidia-cuda-runtime-cu12==12.4.127\n[pip3] nvidia-cudnn-cu12==9.1.0.70\n[pip3] nvidia-cufft-cu12==11.2.1.3\n[pip3] nvidia-curand-cu12==10.3.5.147\n[pip3] nvidia-cusolver-cu12==11.6.1.9\n[pip3] nvidia-cusparse-cu12==12.3.1.170\n[pip3] nvidia-cusparselt-cu12==0.6.2\n[pip3] nvidia-nccl-cu12==2.21.5\n[pip3] nvidia-nvjitlink-cu12==12.4.127\n[pip3] nvidia-nvtx-cu12==12.4.127\n[pip3] torch==2.6.0\n[pip3] triton==3.2.0\n[conda] Could not collect",
  "transformers_version": "4.49.0",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|end_of_text|>",
    0
  ],
  "tokenizer_eos_token": [
    "<|end_of_text|>",
    0
  ],
  "tokenizer_bos_token": [
    "<|end_of_text|>",
    0
  ],
  "eot_token_id": 0,
  "max_length": 131072,
  "task_hashes": {},
  "model_source": "hf",
  "model_name": "ibm-granite/granite-3.1-8b-instruct",
  "model_name_sanitized": "ibm-granite__granite-3.1-8b-instruct",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": true,
  "chat_template": "{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content'] %}\n    {%- set loop_messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"Knowledge Cutoff Date: April 2024.\nToday's Date: \" + strftime_now('%B %d, %Y') + \".\nYou are Granite, developed by IBM.\" %}\n    {%- if tools and documents %}\n        {%- set system_message = system_message + \" You are a helpful AI assistant with access to the following tools. When a tool is required to answer the user's query, respond with <|tool_call|> followed by a JSON list of tools used. If a tool does not exist in the provided list of tools, notify the user that you do not have the ability to fulfill the request.\n\nWrite the response to the user's input by strictly aligning with the facts in the provided documents. If the information needed to answer the question is not available in the documents, inform the user that the question cannot be answered based on the available data.\" %}\n    {%- elif tools %}\n        {%- set system_message = system_message + \" You are a helpful AI assistant with access to the following tools. When a tool is required to answer the user's query, respond with <|tool_call|> followed by a JSON list of tools used. If a tool does not exist in the provided list of tools, notify the user that you do not have the ability to fulfill the request.\" %}\n    {%- elif documents %}\n        {%- set system_message = system_message + \" Write the response to the user's input by strictly aligning with the facts in the provided documents. If the information needed to answer the question is not available in the documents, inform the user that the question cannot be answered based on the available data.\" %}\n    {%- else %}\n        {%- set system_message = system_message + \" You are a helpful AI assistant.\" %}    \n    {%- endif %}\n    {%- if 'citations' in controls and documents %}\n        {%- set system_message = system_message + '\n\nIn your response, use the symbols <co> and </co> to indicate when a fact comes from a document in the search result, e.g <co>0</co> for a fact from document 0. Afterwards, list all the citations with their corresponding documents in an ordered list.' %}\n    {%- endif %}\n    {%- if 'hallucinations' in controls and documents %}\n        {%- set system_message = system_message + '\n\nFinally, after the response is written, include a numbered list of sentences from the response that are potentially hallucinated and not based in the documents.' %}\n    {%- endif %}\n    {%- set loop_messages = messages %}\n{%- endif %}\n{{- '<|start_of_role|>system<|end_of_role|>' + system_message + '<|end_of_text|>\n' }}\n{%- if tools %}\n    {{- '<|start_of_role|>tools<|end_of_role|>' }}\n    {{- tools | tojson(indent=4) }}\n    {{- '<|end_of_text|>\n' }}\n{%- endif %}\n{%- if documents %}\n    {{- '<|start_of_role|>documents<|end_of_role|>' }}\n    {%- for document in documents %}\n        {{- 'Document ' + loop.index0 | string + '\n' }}\n        {{- document['text'] }}\n        {%- if not loop.last %}\n            {{- '\n\n'}}\n        {%- endif%}\n    {%- endfor %}\n    {{- '<|end_of_text|>\n' }}\n{%- endif %}\n{%- for message in loop_messages %}\n    {{- '<|start_of_role|>' + message['role'] + '<|end_of_role|>' + message['content'] + '<|end_of_text|>\n' }}\n    {%- if loop.last and add_generation_prompt %}\n        {{- '<|start_of_role|>assistant' }}\n            {%- if controls %}\n                {{- ' ' + controls | tojson()}}\n            {%- endif %}\n        {{- '<|end_of_role|>' }}\n    {%- endif %}\n{%- endfor %}",
  "chat_template_sha": "08962c2f15d56767854b46dfc4070b37f4c443551833bba65b417191735f3187",
  "start_time": 2183899.522136212,
  "end_time": 2187446.286778736,
  "total_evaluation_time_seconds": "3546.7646425240673"
}